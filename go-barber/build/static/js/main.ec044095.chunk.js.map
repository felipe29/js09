{"version":3,"sources":["assets/logo_roxo.svg","pages/_layout/default/styles.js","components/Header/styles.js","services/api.js","components/Notifications/styles.js","components/Notifications/index.js","components/Header/index.js","pages/_layout/default/index.js","pages/_layout/auth/styles.js","pages/_layout/auth/index.js","store/modules/auth/reducer.js","store/modules/user/reducer.js","store/modules/rootReducer.js","services/history.js","store/modules/auth/actions.js","store/modules/auth/sagas.js","store/modules/user/actions.js","store/modules/user/sagas.js","store/modules/rootSaga.js","store/persistReducers.js","store/index.js","store/createStore.js","routes/Route.js","pages/SignUp/index.js","pages/SignIn/index.js","pages/Dashboard/styles.js","pages/Dashboard/index.js","pages/Profile/AvatarInput/styles.js","pages/Profile/AvatarInput/index.js","pages/Profile/styles.js","pages/Profile/index.js","routes/index.js","styles/global.js","App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["module","exports","Wrapper","styled","div","Container","Content","Profile","api","axios","create","baseURL","Badge","button","props","hasUnread","css","NotificationList","visible","Scroll","PerfectScrollbar","Notification","lighten","unread","Notifications","useState","setVisible","notifications","setNotifications","useMemo","find","notification","read","id","a","put","map","_id","useEffect","get","response","data","timeDistance","formatDistance","parseISO","createdAt","Date","addSuffix","locale","pt","loadNotifications","onClick","color","size","key","content","handlemarkAsRead","type","Header","profile","useSelector","state","user","src","logo","alt","to","name","avatar","url","DefaultLayout","children","darken","AuthLayout","INITIAL_STATE","token","signed","loading","combineReducers","auth","action","produce","draft","payload","avatar_id","histoty","createBrowserHistory","signInSuccess","sigIn","sigUp","email","password","call","post","provider","toast","error","defaults","headers","Authorization","history","push","all","takeLatest","updateProfileSuccess","updateTempIdProfile","updateProfile","rest","oldPassword","info","rootSaga","reducers","sagaMiddlewares","createSagaMiddleware","sagaMonitor","middlewares","store","enhancer","applyMiddleware","createStore","rootReducer","persistReducer","storage","whitelist","persistor","persistStore","RouteWrapper","Component","component","isPrivate","getState","Layout","render","run","defaultProps","schema","Yup","shape","required","min","SignUp","dispatch","useDispatch","onSubmit","console","tron","log","signUpRequest","placeholder","senha","SignIn","signInRequest","Time","li","past","available","range","Dashboard","date","setDate","schedule","setSchedule","dateFormatted","format","params","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","hour","checkDate","setMilliseconds","setSeconds","setMinutes","setHours","compateDate","utcToZonedTime","isBefore","time","appointment","isEqual","loadSchedule","subDays","addDays","AvatarInput","defaultValue","useField","file","setFile","preview","setPreview","ref","useRef","e","FormData","append","target","files","htmlFor","accept","data-file","onChange","teste","initialData","updateProfileRequest","Routes","path","exact","createGlobalStyle","App","autoClose","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec044095.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_roxo.f7b3e1bc.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  min-height: 100%;\n  background: linear-gradient(-90deg, #7159c1, #ab59c1);\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 64px;\n  background: #fff;\n  padding: 0 30px;\n`;\nexport const Content = styled.div`\n  height: 64px;\n\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  nav {\n    display: flex;\n    align-items: center;\n    img {\n      margin-right: 20px;\n      padding-right: 20px;\n      border-right: 1px solid #eee;\n    }\n    a {\n      font-weight: bold;\n      color: #7159c1;\n    }\n  }\n\n  aside {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  margin-left: 20px;\n  padding-left: 20px;\n  border-left: 1px solid #eee;\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #333;\n    }\n    a {\n      display: block;\n      margin-top: 2px;\n      font-size: 12px;\n      color: #999;\n    }\n  }\n  img {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({ baseURL: 'http://localhost:3333' });\n\nexport default api;\n","import styled, { css } from 'styled-components';\n\nimport { lighten } from 'polished';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nexport const Container = styled.div`\n  position: relative;\n`;\nexport const Badge = styled.button`\n  background: none;\n  border: 0;\n  position: relative;\n\n  ${props =>\n    props.hasUnread &&\n    css`\n      &::after {\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 10px;\n        height: 10px;\n        background: #ff892e;\n        content: '';\n        border-radius: 50%;\n      }\n    `}\n`;\n\nexport const NotificationList = styled.div`\n  position: absolute;\n  width: 260px;\n  left: calc(50% - 130px);\n  top: calc(100% + 30px);\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 4px;\n  padding: 15px 5px;\n  display: ${props => (props.visible ? 'block' : 'none')};\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: calc(50% - 20px);\n    top: -20px;\n    width: 0;\n    height: 0;\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-bottom: 20px solid rgba(0, 0, 0, 0.6);\n  }\n`;\nexport const Scroll = styled(PerfectScrollbar)`\n  max-height: 260px;\n  padding: 5px 15px;\n`;\n\nexport const Notification = styled.div`\n  color: #fff;\n\n  & + div {\n    margin-top: 15px;\n    padding-top: 15px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  p {\n    font-size: 13px;\n\n    line-height: 18px;\n  }\n\n  time {\n    font-size: 12px;\n    opacity: 0.6;\n    display: block;\n    margin-bottom: 5px;\n  }\n\n  button {\n    font-size: 12px;\n    border: 0;\n    background: none;\n    color: ${lighten(0.2, '#7159c1')};\n    padding-right: 10px;\n  }\n\n  ${props =>\n    props.unread &&\n    css`\n      &::after {\n        content: '';\n        display: inline-block;\n        right: 0;\n        top: 0;\n        width: 8px;\n        height: 8px;\n        background: #ff892e;\n        content: '';\n        border-radius: 50%;\n      }\n    `}\n`;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { MdNotifications } from 'react-icons/md';\nimport { parseISO, formatDistance } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport api from '~/services/api';\nimport {\n  Container,\n  Badge,\n  NotificationList,\n  Scroll,\n  Notification,\n} from './styles';\n\nexport default function Notifications() {\n  const [visible, setVisible] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  const hasUnread = useMemo(\n    () => !!notifications.find(notification => notification.read === false),\n    [notifications]\n  );\n\n  useEffect(() => {\n    async function loadNotifications() {\n      const response = await api.get('notification');\n\n      const data = response.data.map(notification => ({\n        ...notification,\n        timeDistance: formatDistance(\n          parseISO(notification.createdAt),\n          new Date(),\n          { addSuffix: true, locale: pt }\n        ),\n      }));\n\n      setNotifications(data);\n    }\n    loadNotifications();\n  }, []);\n  function handleToggleVisible() {\n    setVisible(!visible);\n  }\n\n  async function handlemarkAsRead(id) {\n    await api.put(`notification/${id}`);\n\n    setNotifications(\n      notifications.map(notification =>\n        notification._id === id ? { ...notification, read: true } : notification\n      )\n    );\n  }\n\n  return (\n    <Container>\n      <Badge onClick={handleToggleVisible} hasUnread={hasUnread}>\n        <MdNotifications color=\"#7159c1\" size={20} />\n      </Badge>\n\n      <NotificationList visible={visible}>\n        <Scroll>\n          {notifications.map(notification => (\n            <Notification key={notification._id} unread={!notification.read}>\n              <p>{notification.content}</p>\n              <time> {notification.timeDistance}</time>\n              {!notification.read && (\n                <button\n                  onClick={() => handlemarkAsRead(notification._id)}\n                  type=\"button\"\n                >\n                  Marcar como lida\n                </button>\n              )}\n            </Notification>\n          ))}\n        </Scroll>\n      </NotificationList>\n    </Container>\n  );\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Container, Content, Profile } from './styles';\nimport Notification from '~/components/Notifications';\nimport logo from '~/assets/logo_roxo.svg';\n\nexport default function Header() {\n  const profile = useSelector(state => state.user.profile);\n  return (\n    <Container>\n      <Content>\n        <nav>\n          <img src={logo} alt=\"Gobarber\" />\n          <Link to=\"/dashboard\">Dashboard</Link>\n        </nav>\n        <aside>\n          <Notification />\n\n          <Profile>\n            <div>\n              <strong>{profile.name}</strong>\n              <Link to=\"/profile\"> Meu Perfil </Link>\n            </div>\n            <Link to=\"/profile\">\n              <img\n                src={\n                  profile.avatar\n                    ? profile.avatar.url\n                    : 'https://api.adorable.io/avatars/50/abott@adorable.png'\n                }\n                alt=\"Felipe\"\n              />\n            </Link>\n          </Profile>\n        </aside>\n      </Content>\n    </Container>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper } from './styles';\nimport Header from '~/components/Header/';\n\nexport default function DefaultLayout({ children }) {\n  return (\n    <Wrapper>\n      <Header />\n      {children}\n    </Wrapper>\n  );\n}\n\nDefaultLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  background: linear-gradient(-90deg, #7159c1, #ab59c1);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Content = styled.div`\n  width: 100%;\n  max-width: 315px;\n  text-align: center;\n  form {\n    margin-top: 30px;\n    display: flex;\n    flex-direction: column;\n    input {\n      background: rgba(0, 0, 0, 0.1);\n      border: 0;\n      border-radius: 4px;\n      height: 44px;\n      padding: 0 15px;\n      color: #fff;\n      margin: 0 0 10px;\n\n      &::placeholder {\n        color: rgba(255, 255, 255, 0.7);\n      }\n    }\n\n    button {\n      margin: 5px 0 0;\n      height: 44px;\n      background: #3b9eff;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      font-size: 16px;\n      transition: background 0.9s;\n\n      &:hover {\n        background: ${darken(0.5, '#3b9eff')};\n      }\n    }\n    a {\n      text-decoration: none;\n      font-weight: bold;\n      margin-top: 10px;\n      color: #fff;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Content } from './styles';\n\nexport default function AuthLayout({ children }) {\n  return (\n    <Wrapper>\n      <Content>{children}</Content>\n    </Wrapper>\n  );\n}\n\nAuthLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import produce from 'immer';\n\nconst INITIAL_STATE = {\n  token: null,\n  signed: false,\n  loading: false,\n};\n\nexport default function auth(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@auth/SIGN_IN_REQUEST': {\n        draft.loading = true;\n        break;\n      }\n      case '@auth/SIGN_IN_SUCCESS': {\n        draft.token = action.payload.token;\n        draft.signed = true;\n        draft.loading = false;\n        break;\n      }\n      case '@auth/SIGN_FAILURE': {\n        draft.loading = false;\n\n        break;\n      }\n      case '@auth/SIGN_OUT': {\n        draft.token = null;\n        draft.signed = null;\n\n        break;\n      }\n      default:\n    }\n  });\n}\n","import produce from 'immer';\n\nconst INITIAL_STATE = { profile: null };\n\nexport default function user(state = INITIAL_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case '@auth/SIGN_IN_SUCCESS': {\n        draft.profile = action.payload.user;\n        break;\n      }\n      case '@user/UPDATE_PROFILE_SUCCESS': {\n        draft.profile = action.payload.profile;\n        break;\n      }\n      case '@user/UPDATE_TEMP_ID_PROFILE': {\n        draft.profile.avatar_id = action.payload.avatar_id;\n        break;\n      }\n      case '@auth/SIGN_OUT': {\n        draft.profile = null;\n\n        break;\n      }\n\n      default:\n    }\n  });\n}\n","import { combineReducers } from 'redux';\n\nimport auth from '~/store/modules/auth/reducer';\n\nimport user from '~/store/modules/user/reducer';\n\nexport default combineReducers({ auth, user });\n","import { createBrowserHistory } from 'history';\n\nconst histoty = createBrowserHistory();\n\nexport default histoty;\n","export function signInRequest(email, password) {\n  return {\n    type: '@auth/SIGN_IN_REQUEST',\n    payload: { email, password },\n  };\n}\n\nexport function signInSuccess(token, user) {\n  return {\n    type: '@auth/SIGN_IN_SUCCESS',\n    payload: { token, user },\n  };\n}\n\nexport function signUpRequest(name, email, password) {\n  return {\n    type: '@auth/SIGN_UP_REQUEST',\n    payload: { name, email, password },\n  };\n}\n\nexport function signFailure() {\n  return {\n    type: '@auth/SIGN_FAILURE',\n  };\n}\n\nexport function signOut() {\n  return {\n    type: '@auth/SIGN_OUT',\n  };\n}\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\nimport history from '~/services/history';\nimport { signInSuccess, signFailure } from './actions';\n\nexport function* sigIn({ payload }) {\n  try {\n    const { email, password } = payload;\n\n    const response = yield call(api.post, 'session', { email, password });\n    const { token, user } = response.data;\n\n    if (!user.provider) {\n      toast.error('Desculpe essa aplicacao é apenas para prestadores');\n      return;\n    }\n\n    yield put(signInSuccess(token, user));\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n    history.push('/dashboard');\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seus dados');\n    yield put(signFailure());\n  }\n}\n\nexport function* sigUp({ payload }) {\n  try {\n    const { name, email, password } = payload;\n    yield call(api.post, 'users', { name, email, password, provider: true });\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha no cadastro verifique seus dados');\n    yield put(signFailure());\n  }\n}\n\nexport function setTokenOnApi({ payload }) {\n  if (!payload) return;\n\n  const { token } = payload.auth;\n\n  if (token) {\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n  }\n}\n\nexport function signOut() {\n  history.push('/');\n}\n\nexport default all([\n  takeLatest('persist/REHYDRATE', setTokenOnApi),\n  takeLatest('@auth/SIGN_IN_REQUEST', sigIn),\n  takeLatest('@auth/SIGN_UP_REQUEST', sigUp),\n  takeLatest('@auth/SIGN_OUT', signOut),\n]);\n","export function updateProfileRequest(data) {\n  return {\n    type: '@user/UPDATE_PROFILE_REQUEST',\n    payload: { data },\n  };\n}\n\nexport function updateProfileSuccess(profile) {\n  return {\n    type: '@user/UPDATE_PROFILE_SUCCESS',\n    payload: { profile },\n  };\n}\nexport function updateTempIdProfile(id) {\n  return {\n    type: '@user/UPDATE_TEMP_ID_PROFILE',\n    payload: { avatar_id: id },\n  };\n}\n\nexport function updateProfileFailed() {\n  return {\n    type: '@user/UPDATE_PROFILE_FAILED',\n  };\n}\n","import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '~/services/api';\nimport { updateProfileSuccess, updateProfileFailed } from './actions';\n\nexport function* updateProfile({ payload }) {\n  try {\n    const { name, email, avatar_id, ...rest } = payload.data;\n    const profile = {\n      name,\n      email,\n      avatar_id,\n      ...(rest.oldPassword ? rest : {}),\n    };\n    const response = yield call(api.put, 'users', profile);\n    toast.info('Perfil atualizado com exito');\n    yield put(updateProfileSuccess(response.data));\n  } catch (erro) {\n    toast.error('Erro ao atualizar perfil, confira seus dados');\n    yield put(updateProfileFailed());\n  }\n}\n\nexport default all([takeLatest('@user/UPDATE_PROFILE_REQUEST', updateProfile)]);\n","import { all } from 'redux-saga/effects';\n\nimport auth from './auth/sagas';\nimport user from './user/sagas';\n\nexport default function* rootSaga() {\n  return yield all([auth, user]);\n}\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport default reducers => {\n  const persistedReducer = persistReducer(\n    {\n      key: 'gobarber',\n      storage,\n      whitelist: ['auth', 'user'],\n    },\n    reducers\n  );\n\n  return persistedReducer;\n};\n","import { persistStore } from 'redux-persist';\n\nimport createSagaMiddleware from 'redux-saga';\nimport createStore from './createStore';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nimport persistedReducer from './persistReducers';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\nconst sagaMiddlewares = createSagaMiddleware({ sagaMonitor });\n\nconst middlewares = [sagaMiddlewares];\n\nconst store = createStore(persistedReducer(rootReducer), middlewares);\nconst persistor = persistStore(store);\nsagaMiddlewares.run(rootSaga);\nexport { store, persistor };\n","import { createStore, compose, applyMiddleware } from 'redux';\n\nexport default (reducers, middlewares) => {\n  const enhancer =\n    process.env.NODE_ENV === 'development'\n      ? compose(\n          console.tron.createEnhancer(),\n          applyMiddleware(...middlewares)\n        )\n      : applyMiddleware(...middlewares);\n\n  return createStore(reducers, enhancer);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport DefaultLayout from '~/pages/_layout/default';\nimport AuthLayout from '~/pages/_layout/auth';\n\nimport { store } from '~/store';\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const { signed } = store.getState().auth;\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const Layout = signed ? DefaultLayout : AuthLayout;\n\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport logo from '~/assets/logo.svg';\nimport { signUpRequest } from '~/store/modules/auth/actions';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('O Nome é obrigatório'),\n  email: Yup.string().required('O email é obrigatório'),\n  password: Yup.string()\n    .min(6, 'No minino 6 caracteres')\n    .required('A senha é obrigátória'),\n});\nexport default function SignUp() {\n  const dispatch = useDispatch();\n  function handleSubmit(data) {\n    const { name, email, password } = data;\n    console.tron.log(data);\n    dispatch(signUpRequest(name, email, password));\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"GoBarber\" />\n      <Form schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"name\" placeholder=\"Nome completo\" />\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n        <Input name=\"password\" type=\"password\" placeholder=\"Sua senha\" />\n        <button type=\"submit\">Salvar</button>\n        <Link to=\"/\">Já tenho conta</Link>\n      </Form>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport logo from '~/assets/logo.svg';\n\nimport { signInRequest } from '~/store/modules/auth/actions';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().required('O email é obrigatório'),\n  senha: Yup.string().required('A senha é obrigátória'),\n});\nexport default function SignIn() {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.auth.loading);\n\n  function handleSubmit({ email, senha }) {\n    dispatch(signInRequest(email, senha));\n    console.tron.log(loading);\n  }\n  return (\n    <>\n      <img src={logo} alt=\"GoBarber\" />\n      <Form schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n        <Input name=\"senha\" type=\"password\" placeholder=\"Sua senha\" />\n        <button type=\"submit\">{loading ? 'Carregando...' : 'Acessar'}</button>\n        <Link to=\"/register\">Criar conta</Link>\n      </Form>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 600px;\n\n  margin: 50px auto;\n  display: flex;\n  flex-direction: column;\n  max-height: 50%;\n\n  header {\n    display: flex;\n    align-self: center;\n    align-items: center;\n    button {\n      border: 0;\n      background: none;\n    }\n\n    strong {\n      color: #fff;\n      font-size: 24px;\n      margin: 0 15px;\n    }\n  }\n  ul {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 15px;\n    margin-top: 30px;\n  }\n`;\n\nexport const Time = styled.li`\n  padding: 20px;\n  border-radius: 4px;\n  background: #fff;\n\n  opacity: ${props => (props.past ? 0.4 : 1)};\n\n  strong {\n    display: block;\n    color: ${props => (props.available ? '#999' : '#7159c1')};\n    font-size: 20px;\n    font-weight: normal;\n  }\n\n  span {\n    display: block;\n    margin-top: 3px;\n    color: ${props => (props.available ? '#999' : '#666')};\n  }\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport {\n  format,\n  subDays,\n  addDays,\n  setHours,\n  setMinutes,\n  setSeconds,\n  setMilliseconds,\n  isBefore,\n  parseISO,\n  isEqual,\n} from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport pt from 'date-fns/locale/pt';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport api from '~/services/api';\nimport { Container, Time } from './styles';\n\nconst range = [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\nexport default function Dashboard() {\n  const [date, setDate] = useState(new Date());\n  const [schedule, setSchedule] = useState([]);\n  const dateFormatted = useMemo(\n    () => format(date, \"d 'de' MMMM\", { locale: pt }),\n    [date]\n  );\n\n  useEffect(() => {\n    async function loadSchedule() {\n      const response = await api.get('schedule', { params: { date } });\n      const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      const data = range.map(hour => {\n        const checkDate = setMilliseconds(\n          setSeconds(setMinutes(setHours(date, hour), 0), 0),\n          0\n        );\n        const compateDate = utcToZonedTime(checkDate, timezone);\n\n        return {\n          past: isBefore(compateDate, new Date()),\n          time: `${hour}:00h`,\n          appointment: response.data.find(a => {\n            if (isEqual(parseISO(a.date), compateDate)) {\n              return true;\n            }\n\n            return false;\n          }),\n        };\n      });\n\n      setSchedule(data);\n    }\n    loadSchedule();\n  }, [date]);\n\n  function handlePreviusDay() {\n    setDate(subDays(date, 1));\n  }\n\n  function handleNextDay() {\n    setDate(addDays(date, 1));\n  }\n  return (\n    <Container>\n      <header>\n        <button onClick={() => handlePreviusDay()} type=\"button\">\n          <MdChevronLeft size={36} color=\"#FFF\" />\n        </button>\n        <strong>{dateFormatted}</strong>\n        <button onClick={() => handleNextDay()} type=\"button\">\n          <MdChevronRight size={36} color=\"#FFF\" />\n        </button>\n      </header>\n\n      <ul>\n        {schedule.map(time => (\n          <Time key={time.time} past={time.past} available={!time.appointment}>\n            <strong>{time.time}</strong>\n            <span>\n              {time.appointment ? time.appointment.user.name : 'Livre'}\n            </span>\n          </Time>\n        ))}\n      </ul>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-self: center;\n  margin-bottom: 30px;\n\n  label {\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.7;\n    }\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n      border: 3px solid rgba(255, 255, 255, 0.3);\n      background: #eee;\n    }\n\n    input {\n      display: none;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useField } from '@rocketseat/unform';\nimport { Container } from './styles';\nimport api from '~/services/api';\nimport { updateTempIdProfile } from '~/store/modules/user/actions';\n\nexport default function AvatarInput() {\n  const dispatch = useDispatch();\n  const { defaultValue } = useField('avatar');\n  const [file, setFile] = useState(defaultValue && defaultValue.id);\n  const [preview, setPreview] = useState(defaultValue && defaultValue.url);\n\n  const ref = useRef();\n\n  async function handleChange(e) {\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    const response = await api.post('files', data);\n    const { id, url } = response.data;\n    setFile(id);\n    setPreview(url);\n    dispatch(updateTempIdProfile(id));\n  }\n\n  return (\n    <Container>\n      <label htmlFor=\"avatar\">\n        <img\n          src={\n            preview || 'https://api.adorable.io/avatars/50/abott@adorable.png'\n          }\n          alt=\"\"\n        />\n        <input\n          type=\"file\"\n          id=\"avatar\"\n          accept=\"image/*\"\n          data-file={file}\n          onChange={handleChange}\n          ref={ref}\n        />\n      </label>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  max-width: 600px;\n  margin: 50px auto;\n  form {\n    margin-top: 30px;\n    display: flex;\n    flex-direction: column;\n    input {\n      background: rgba(0, 0, 0, 0.1);\n      border: 0;\n      border-radius: 4px;\n      height: 44px;\n      padding: 0 15px;\n      color: #fff;\n      margin: 0 0 10px;\n\n      &::placeholder {\n        color: rgba(255, 255, 255, 0.7);\n      }\n    }\n\n    hr {\n      border: 0;\n      height: 1px;\n      background: rgba(255, 255, 255, 0.2);\n      margin-bottom: 20px;\n      margin-top: 10px;\n    }\n    button {\n      margin: 5px 0 0;\n      height: 44px;\n      background: #3b9eff;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      font-size: 16px;\n      transition: background 0.9s;\n\n      &:hover {\n        background: ${darken(0.3, '#3b9eff')};\n      }\n    }\n\n    a {\n      color: #fff;\n      margin-top: 15px;\n      font-size: 16px;\n      opacity: 0.5;\n      transition: opacity 0.9s;\n      &:hover {\n        opacity: 1;\n      }\n    }\n\n    span {\n      color: rgb(209, 63, 49);\n    }\n  }\n  > button {\n    width: 100%;\n    margin: 5px 0 0;\n    height: 44px;\n    background: #fb6f91;\n    color: #fff;\n    border: 0;\n    border-radius: 4px;\n    font-size: 16px;\n    transition: background 0.9s;\n\n    &:hover {\n      background: ${darken(0.5, '#fb6f91')};\n    }\n  }\n`;\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input } from '@rocketseat/unform';\nimport AvatarInput from './AvatarInput';\nimport { Container } from './styles';\n\nimport { updateProfileRequest } from '~/store/modules/user/actions';\nimport { signOut } from '~/store/modules/auth/actions';\n\nexport default function Profile() {\n  const dispatch = useDispatch();\n  const profile = useSelector(state => state.user.profile);\n  const teste = useSelector(state => state.user);\n  function handleSubmit(data) {\n    const { avatar_id } = teste.profile;\n    if (avatar_id) {\n      data = { ...data, avatar_id: teste.profile.avatar_id };\n    }\n\n    dispatch(updateProfileRequest(data));\n  }\n\n  function handleSignOut() {\n    dispatch(signOut());\n  }\n\n  return (\n    <Container>\n      <Form initialData={profile} onSubmit={handleSubmit}>\n        <AvatarInput name=\"avatar_id\" />\n        <Input name=\"name\" placeholder=\"Nome completo\" />\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu endereço de e-mail\" />\n\n        <hr />\n\n        <Input\n          type=\"password\"\n          name=\"oldPassword\"\n          placeholder=\"Sua senha atual\"\n        />\n        <Input type=\"password\" name=\"password\" placeholder=\"Nova senha\" />\n        <Input\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirmação de senha\"\n        />\n        <button type=\"submit\">Atualizar Perfil</button>\n      </Form>\n      <button onClick={() => handleSignOut()} type=\"button\">\n        Sair do GoBarber\n      </button>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Route from './Route';\n\nimport SignUp from '../pages/SignUp';\nimport SignIn from '../pages/SignIn';\nimport Dashboard from '../pages/Dashboard';\nimport Profile from '../pages/Profile';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={SignIn} />\n      <Route path=\"/register\" component={SignUp} />\n\n      <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n      <Route path=\"/profile\" component={Profile} isPrivate />\n    </Switch>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nexport default createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\n\n*{\n  margin: 0;\n  padding: 0;\n  outline: 0;\n  box-sizing: border-box;\n  }\n\n*:focus{\n  outline:0;\n}\n\nhtml,body, #root{\nheight: 100%;\n}\n\nbody{\n  -webkit-font-smoothing: antialiased;\n}\n\nbody, input, button{\n  font: 14px 'Roboto', sans-serif;\n}\n\na {\n  text-decoration: none;\n}\n\nul {\n  list-style: none\n}\n\nbutton{\ncursor: pointer;\n}\n`;\n","import React from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport './config/ReactotronConfig';\nimport { ToastContainer } from 'react-toastify';\nimport Routes from './routes';\nimport history from './services/history';\n\nimport { store, persistor } from './store';\n\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Router history={history}>\n          <Routes />\n          <GlobalStyle />\n          <ToastContainer autoClose={3000} />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.b6a88dbb.svg\";"],"sourceRoot":""}