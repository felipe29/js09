{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/felipe/github/modulo09/go-barber-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n      &::after {\\n        content: '';\\n        display: inline-block;\\n        right: 0;\\n        top: 0;\\n        width: 8px;\\n        height: 8px;\\n        background: #ff892e;\\n        content: '';\\n        border-radius: 50%;\\n      }\\n    \"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #fff;\\n\\n  & + div {\\n    margin-top: 15px;\\n    padding-top: 15px;\\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\\n  }\\n\\n  p {\\n    font-size: 13px;\\n\\n    line-height: 18px;\\n  }\\n\\n  time {\\n    font-size: 12px;\\n    opacity: 0.6;\\n    display: block;\\n    margin-bottom: 5px;\\n  }\\n\\n  button {\\n    font-size: 12px;\\n    border: 0;\\n    background: none;\\n    color: \", \";\\n    padding-right: 10px;\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  max-height: 260px;\\n  padding: 5px 15px;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  width: 260px;\\n  left: calc(50% - 130px);\\n  top: calc(100% + 30px);\\n  background: rgba(0, 0, 0, 0.6);\\n  border-radius: 4px;\\n  padding: 15px 5px;\\n  display: \", \";\\n\\n  &::before {\\n    content: '';\\n    position: absolute;\\n    left: calc(50% - 20px);\\n    top: -20px;\\n    width: 0;\\n    height: 0;\\n    border-left: 20px solid transparent;\\n    border-right: 20px solid transparent;\\n    border-bottom: 20px solid rgba(0, 0, 0, 0.6);\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n      &::after {\\n        position: absolute;\\n        right: 0;\\n        top: 0;\\n        width: 10px;\\n        height: 10px;\\n        background: #ff892e;\\n        content: '';\\n        border-radius: 50%;\\n      }\\n    \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background: none;\\n  border: 0;\\n  position: relative;\\n\\n  \", \"\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { css } from 'styled-components';\nimport { lighten } from 'polished';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nexport const Container = styled.div(_templateObject());\nexport const Badge = styled.button(_templateObject2(), props => props.hasUnread && css(_templateObject3()));\nexport const NotificationList = styled.div(_templateObject4(), props => props.visible ? 'block' : 'none');\nexport const Scroll = styled(PerfectScrollbar)(_templateObject5());\nexport const Notification = styled.div(_templateObject6(), lighten(0.2, '#7159c1'), props => props.unread && css(_templateObject7()));","map":{"version":3,"sources":["/home/felipe/github/modulo09/go-barber-react/src/components/Notifications/styles.js"],"names":["styled","css","lighten","PerfectScrollbar","Container","div","Badge","button","props","hasUnread","NotificationList","visible","Scroll","Notification","unread"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV,mBAAf;AAGP,OAAO,MAAMC,KAAK,GAAGN,MAAM,CAACO,MAAV,qBAKdC,KAAK,IACLA,KAAK,CAACC,SAAN,IACAR,GADA,oBANc,CAAX;AAqBP,OAAO,MAAMS,gBAAgB,GAAGV,MAAM,CAACK,GAAV,qBAQhBG,KAAK,IAAKA,KAAK,CAACG,OAAN,GAAgB,OAAhB,GAA0B,MARpB,CAAtB;AAsBP,OAAO,MAAMC,MAAM,GAAGZ,MAAM,CAACG,gBAAD,CAAT,oBAAZ;AAKP,OAAO,MAAMU,YAAY,GAAGb,MAAM,CAACK,GAAV,qBA0BZH,OAAO,CAAC,GAAD,EAAM,SAAN,CA1BK,EA8BrBM,KAAK,IACLA,KAAK,CAACM,MAAN,IACAb,GADA,oBA/BqB,CAAlB","sourcesContent":["import styled, { css } from 'styled-components';\n\nimport { lighten } from 'polished';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nexport const Container = styled.div`\n  position: relative;\n`;\nexport const Badge = styled.button`\n  background: none;\n  border: 0;\n  position: relative;\n\n  ${props =>\n    props.hasUnread &&\n    css`\n      &::after {\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 10px;\n        height: 10px;\n        background: #ff892e;\n        content: '';\n        border-radius: 50%;\n      }\n    `}\n`;\n\nexport const NotificationList = styled.div`\n  position: absolute;\n  width: 260px;\n  left: calc(50% - 130px);\n  top: calc(100% + 30px);\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 4px;\n  padding: 15px 5px;\n  display: ${props => (props.visible ? 'block' : 'none')};\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: calc(50% - 20px);\n    top: -20px;\n    width: 0;\n    height: 0;\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-bottom: 20px solid rgba(0, 0, 0, 0.6);\n  }\n`;\nexport const Scroll = styled(PerfectScrollbar)`\n  max-height: 260px;\n  padding: 5px 15px;\n`;\n\nexport const Notification = styled.div`\n  color: #fff;\n\n  & + div {\n    margin-top: 15px;\n    padding-top: 15px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  p {\n    font-size: 13px;\n\n    line-height: 18px;\n  }\n\n  time {\n    font-size: 12px;\n    opacity: 0.6;\n    display: block;\n    margin-bottom: 5px;\n  }\n\n  button {\n    font-size: 12px;\n    border: 0;\n    background: none;\n    color: ${lighten(0.2, '#7159c1')};\n    padding-right: 10px;\n  }\n\n  ${props =>\n    props.unread &&\n    css`\n      &::after {\n        content: '';\n        display: inline-block;\n        right: 0;\n        top: 0;\n        width: 8px;\n        height: 8px;\n        background: #ff892e;\n        content: '';\n        border-radius: 50%;\n      }\n    `}\n`;\n"]},"metadata":{},"sourceType":"module"}