{"ast":null,"code":"var _jsxFileName = \"/home/felipe/github/modulo09/go-barber-react/src/pages/SignIn/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport logo from \"../../assets/logo.svg\";\nimport { signInRequest } from \"../../store/modules/auth/actions\";\nconst schema = Yup.object().shape({\n  email: Yup.string().required('O email é obrigatório'),\n  senha: Yup.string().required('A senha é obrigátória')\n});\nexport default function SignIn() {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.auth.loading);\n\n  function handleSubmit({\n    email,\n    senha\n  }) {\n    dispatch(signInRequest(email, senha));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n    src: logo,\n    alt: \"GoBarber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Seu e-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"senha\",\n    type: \"password\",\n    placeholder: \"Sua senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, loading ? 'Carregando...' : 'Acessar'), React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Criar conta\")));\n}","map":{"version":3,"sources":["/home/felipe/github/modulo09/go-barber-react/src/pages/SignIn/index.js"],"names":["React","Link","Form","Input","Yup","useDispatch","useSelector","signInRequest","schema","object","shape","email","string","required","senha","SignIn","dispatch","loading","state","auth","handleSubmit","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,oBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA,SAASC,aAAT,QAA8B,kCAA9B;AAEA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CADyB;AAEhCC,EAAAA,KAAK,EAAEV,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB;AAFyB,CAAnB,CAAf;AAIA,eAAe,SAASE,MAAT,GAAkB;AAC/B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,OAAO,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,OAArB,CAA3B;;AAEA,WAASG,YAAT,CAAsB;AAAET,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAtB,EAAwC;AACtCE,IAAAA,QAAQ,CAACT,aAAa,CAACI,KAAD,EAAQG,KAAR,CAAd,CAAR;AACD;;AACD,SACE,0CACE;AAAK,IAAA,GAAG,EAAEO,IAAV;AAAgB,IAAA,GAAG,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEb,MAAd;AAAsB,IAAA,QAAQ,EAAEY,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,UAAzB;AAAoC,IAAA,WAAW,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBH,OAAO,GAAG,eAAH,GAAqB,SAAnD,CAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAFF,CADF;AAWD","sourcesContent":["import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport logo from '~/assets/logo.svg';\n\nimport { signInRequest } from '~/store/modules/auth/actions';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().required('O email é obrigatório'),\n  senha: Yup.string().required('A senha é obrigátória'),\n});\nexport default function SignIn() {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.auth.loading);\n\n  function handleSubmit({ email, senha }) {\n    dispatch(signInRequest(email, senha));\n  }\n  return (\n    <>\n      <img src={logo} alt=\"GoBarber\" />\n      <Form schema={schema} onSubmit={handleSubmit}>\n        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n        <Input name=\"senha\" type=\"password\" placeholder=\"Sua senha\" />\n        <button type=\"submit\">{loading ? 'Carregando...' : 'Acessar'}</button>\n        <Link to=\"/register\">Criar conta</Link>\n      </Form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}